spring:
  profiles:
    active: dev
    include: secret
  servlet:
    multipart:
      enabled: true # 멀티파트 업로드 지원여부 (default: true)
      file-size-threshold: 0B # 파일을 디스크에 저장하지 않고 메모리에 저장하는 최소 크기 (default: 0B)
      location:  # 업로드된 파일이 임시로 저장되는 디스크 위치 (default: WAS가 결정)
      max-file-size: 3MB # 한개 파일의 최대 사이즈 (default: 1MB)
      max-request-size: 10MB # 한개 요청의 최대 사이즈 (default: 10MB)
  jackson:
    serialization:
      fail-on-empty-beans: false
  threads:
    virtual:
      enabled: true
  sql:
    init:
      mode: always
      continue-on-error: true
      data-locations: classpath:/sql/data1.sql, classpath:/sql/data2.sql, classpath:/sql/data3.sql
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        #dialect: org.hibernate.dialect.MySQLDialect
        default_batch_fetch_size: 100
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
    open-in-view: false
    defer-datasource-initialization: true
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: <ON_SECRET>
            scope: profile_nickname, profile_image
            client-name: Kakao
            authorization-grant-type: authorization_code
            redirect-uri: '${custom.site.backUrl}/{action}/oauth2/code/{registrationId}'
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  batch:
    jdbc:
      initialize-schema: always
    job:
      enabled: false
custom:
  dev:
    cookieDomain: localhost
    frontUrl: "http://${custom.dev.cookieDomain}:3000"
    backUrl: "http://${custom.dev.cookieDomain}:${server.port}"
  prod:
    cookieDomain: everycharge.me
    frontUrl: "https://${custom.prod.cookieDomain}"
    backUrl: "https://api.${custom.prod.cookieDomain}"
  site:
    cookieDomain: "${custom.dev.cookieDomain}"
    frontUrl: "${custom.dev.frontUrl}"
    backUrl: "${custom.dev.backUrl}"
    name: everycharge
  jwt:
    secretKey: <ON_SECRET>
  accessToken:
    expirationSec: '#{60*60}'
  temp:
    dirPath: c:/temp/everycharge_dev/temp
  genFile:
    dirPath: c:/temp/everycharge_dev
  api:
    serviceKey: <ON_SECRET>